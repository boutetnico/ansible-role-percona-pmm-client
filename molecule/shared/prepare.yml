---
- name: Prepare
  hosts: all
  vars:
    docker_apt_signed_by: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
    docker_apt_uris: "https://download.docker.com/linux/{{ ansible_distribution | lower }}"
    docker_architecture_map:
      "x86_64": "amd64"
      "aarch64": "arm64"
      "aarch": "arm64"
      "armhf": "armhf"
      "armv7l": "armhf"

    docker_dependencies:
      - apt-transport-https
      - gnupg2
      - python3-debian
      - python3-docker
    docker_packages:
      - docker-ce-cli

  tasks:
    - name: Install Docker dependencies
      ansible.builtin.apt:
        name: "{{ docker_dependencies }}"
        update_cache: true

    - name: Configure Docker APT repository
      ansible.builtin.deb822_repository:
        architectures: "{{ docker_architecture_map[ansible_architecture] }}"
        components: stable
        name: docker
        signed_by: "{{ docker_apt_signed_by }}"
        suites: "{{ ansible_distribution_release }}"
        uris: "{{ docker_apt_uris }}"

    - name: Install Docker
      ansible.builtin.apt:
        name: "{{ docker_packages }}"
        state: "{{ docker_package_state }}"
        update_cache: true

    - name: Create a MySQL test container
      community.general.docker_container:
        env:
          MYSQL_ROOT_PASSWORD: root
        image: mysql:latest
        name: pmm-mysql
        ports:
          - "3306:3306"
        state: started

    - name: Create a MongoDB test container
      community.general.docker_container:
        image: mongo:latest
        name: pmm-mongo
        ports:
          - "27017:27017"
        state: started

    - name: Setup PMM server
      ansible.builtin.include_role:
        name: boutetnico.pmm_server
